{"version":3,"file":"static/js/863.6aa67f26.chunk.js","mappings":"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","sources":["api/fetchFilm.js","components/NotFound.jsx","pages/FilmDetails/FilmDetails.styled.jsx","pages/FilmDetails/FilmDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '91e9e43bc5abd62bce4a412250ca2b4a';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MWU5ZTQzYmM1YWJkNjJiY2U0YTQxMjI1MGNhMmI0YSIsInN1YiI6IjY0OGRmMWZjYzNjODkxMDBlYjMyOGIyNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.na6QWvyUcstLt3R2SMZMeFGFAjRDN7q7NqBOmfFB0qU',\n  },\n};\n\n// функція отримання переліку топових фільмів на день\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації по обраному фільму\nexport const getDetailMovie = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації про акторський склад для сторінки кінофільму\nexport const getCast = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція запиту оглядів для сторінки кінофільму\nexport const getReviews = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція пошуку фільма за назвою\nexport const getFilm = async filmName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${filmName}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import { Link } from 'react-router-dom';\n const NotFound = ({error}) => {\n    return <div><Link to=\"/\">Go back home </Link>{error ? error : \"404 - Сторінка не знайдена\"}</div>;\n  } ;\n  export default NotFound ;","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  padding: 20px;\n  background-color: #fff;\n`;\n\nexport const WrapperMain = styled.div`\n  display: flex;\n  gap: 20px;\n  border-bottom: 3px solid grey;\n  padding: 10px 0;\n  img {\n    width: 250px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 8px;\n  font-size: 34px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const Overview = styled.h2`\n  margin-bottom: 8px;\n  font-size: 28px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const Genres = styled.h3`\n  margin-bottom: 8px;\n  font-size: 22px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const Additional = styled.h4`\n  font-weight: 600;\n  color: black;\n`;\n\nexport const DataText = styled.p`\n  margin-bottom: 20px;\n  color: black;\n`;\n\nexport const ListOfAdditional = styled.ul`\n  li {\n    margin-left: 30px;\n    margin-top: 8px;\n    font-weight: 600;\n  }\n`;\n\nexport const WrapperAdditional = styled.div`\n  padding: 10px 0;\n  border-bottom: 3px solid grey;\n  img {\n    outline: 1px solid red;\n  }\n`;\n","import { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState, Suspense, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getDetailMovie } from 'api/fetchFilm';\nimport {\n  Additional,\n  Container,\n  DataText,\n  Genres,\n  ListOfAdditional,\n  Overview,\n  Title,\n  WrapperAdditional,\n  WrapperMain,\n} from './FilmDetails.styled';\n\n// зображення користувача за замовчуванням\nimport defaultPicture from '../../components/Cast/avatar-picture.png';\nimport  NotFound  from '../../components/NotFound';\n\nconst FilmDetails = () => {\n  const { id } = useParams();\n  const location = useLocation(); //для отримання шляху з якого прийшли\n  const backLinkRef = useRef(location.state?.from ?? '/'); //для зберігання шляху з якого прийшли\n  const [info, setInfo] = useState({})\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        const film = await getDetailMovie(id);\n        \n        if (!film) {\n          setError('Інформація по фільму відсутня');\n          setStatus('rejected');\n        } else {\n          setInfo(film)\n          setStatus('resolved');\n        }\n      } catch (error) {\n        setError(error.message);\n        setStatus('rejected');\n      }\n    };\n\n    fetchFilms();\n  }, [id]);\n\n  const {genres, release_date, poster_path, title, overview, vote_average } = info;\n\n \n  const urlImg = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : defaultPicture;\n  \n  const date = release_date?.split('-')[0];\n\n  return (\n    <Container>\n      <NavLink to={backLinkRef.current}>Back</NavLink>\n\n\n\n      {status === 'rejected' && <NotFound error={error}/>}\n\n      {status === 'resolved' && (\n        <WrapperMain>\n          <img src={urlImg} alt={title} />\n          <div>\n            <Title>\n              {title} <span> ({date})</span>\n            </Title>\n            <DataText>User Score: {(vote_average * 10).toFixed(0)} %</DataText>\n            <Overview>Overview</Overview>\n            <DataText>{overview}</DataText>\n            <Genres>Genres</Genres>\n            <DataText>{genres.map(el => el.name).join(' / ')}</DataText>\n          </div>\n        </WrapperMain>\n      )}\n\n      {status === 'resolved' && (\n        <WrapperAdditional>\n          <Additional>Additional information</Additional>\n          <ListOfAdditional>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ListOfAdditional>\n        </WrapperAdditional>\n      )}\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default FilmDetails;"],"names":["BASE_URL","options","method","headers","accept","Authorization","getMovies","axios","response","data","getDetailMovie","movie_id","getCast","getReviews","getFilm","filmName","error","to","Container","styled","WrapperMain","Title","Overview","Genres","Additional","DataText","ListOfAdditional","WrapperAdditional","id","useParams","location","useLocation","backLinkRef","useRef","state","from","useState","info","setInfo","setError","status","setStatus","useEffect","fetchFilms","film","message","genres","release_date","poster_path","title","overview","vote_average","urlImg","defaultPicture","date","split","current","NotFound","src","alt","toFixed","map","el","name","join","Suspense","fallback"],"sourceRoot":""}